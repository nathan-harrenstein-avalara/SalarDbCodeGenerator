<?xml version="1.0" encoding="utf-8" ?>
<PatternFile>
    <Name>Database Entity Objects</Name>
    <Description>Entity objects pattern</Description>
    <Options
        Group="Database Model"
        AppliesTo="TablesAndViewsAll"
        Overwrite="true"
        FilePath="Entities\Principal\EntityObjects.cs"
        Language="C#"
        />
    <BaseContent>
        <![CDATA[using System;
using System.ComponentModel.DataAnnotations;
using Avalara.SafeFetch.Base;
 
/*
 * 
 * THIS FILE IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MAKE CHANGES TO THIS FILE.
 * 
 * Generated by SalarDbCodeGenerator
 * https://github.com/ted-spence-avalara/TS_SalarDbCodeGenerator
 * 
 * To include or exclude classes from this file, launch the DbGen file and select or deselect tables from the database.
 * Do not add your own code in this file.  All classes in this file are marked "Partial", so you can easily extend them
 * by adding a separate "UserDap" file.
 * 
 */

namespace [:Namespace:].Entities
{
[#TablesAndViewsContent#]
}
]]>
    </BaseContent>

    <PatternContent Name="TablesAndViewsContent" ConditionKeyMode="TablesAndViewsAll">
        <BaseContent>[:InnerContent:]</BaseContent>
        <Condition Key="TheReplacement">
            <![CDATA[
    public partial class [:TableName:] : EntityBase
    {
[#FieldsProperties#]
    }
]]>
        </Condition>
        <ConditionContents>
            <PatternContent Name="FieldsProperties" ConditionKeyMode="FieldsKeyTypeAll">
                <Condition Key="OneToOnePrimaryKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="OneToOneForeignKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncrementPrimaryKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncrement">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncNativeNullable">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncNullableType">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:]? [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="PrimaryKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="NormalField">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="NativeNullable">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="NullableType">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:]? [:FieldName:] { get; set; }
]]>
                </Condition>
            </PatternContent>
        </ConditionContents>
    </PatternContent>
</PatternFile>
