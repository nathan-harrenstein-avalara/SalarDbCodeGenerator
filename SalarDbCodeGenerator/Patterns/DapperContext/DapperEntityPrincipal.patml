<?xml version="1.0" encoding="utf-8" ?>
<PatternFile>
    <Name>Database Entity Objects</Name>
    <Description>Entity objects pattern</Description>
    <Options
        Group="Database Model"
        AppliesTo="TablesAndViewsAll"
        Overwrite="true"
        FilePath="Entities\Principal\EntityObjects.cs"
        Language="C#"
        />
    <BaseContent>
        <![CDATA[using System;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using [:Namespace:].Base;
 
namespace [:Namespace:].Entities
{
[#TablesAndViewsContent#]
}
]]>
    </BaseContent>

    <PatternContent Name="TablesAndViewsContent" ConditionKeyMode="TablesAndViewsAll">
        <BaseContent>[:InnerContent:]</BaseContent>
        <Condition Key="TheReplacement">
            <![CDATA[
    public partial class [:TableName:] : BaseModel
    {
[#FieldsProperties#]
[#ForeignKeys#]
    }
]]>
        </Condition>
        <ConditionContents>
            <PatternContent Name="FieldsProperties" ConditionKeyMode="FieldsKeyTypeAll">
                <Condition Key="OneToOnePrimaryKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="OneToOneForeignKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncrementPrimaryKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncrement">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncNativeNullable">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="AutoIncNullableType">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:]? [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="PrimaryKey">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="NormalField">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="NativeNullable">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
                </Condition>
                <Condition Key="NullableType">
                    <![CDATA[
        /// <summary>
        /// [:FieldDescription:]
        /// </summary>
        [Display(Name = "[:FieldDescription:]")]
        public [:FieldDotNetType:]? [:FieldName:] { get; set; }
]]>
                </Condition>
            </PatternContent>
            <PatternContent Name="ForeignKeys" ConditionKeyMode="FieldsForeignKeyAll">
                <Condition Key="MultiplicityOne">
                    <![CDATA[
        /// <summary>
        /// [:ForeignTableNameDb:] - [:LocalFieldNameDb:]
        /// </summary>
        public [:ForeignTableName:] [:ForeignTableNameAsField:]()
        {
            using (var dap = new [:ForeignTableName:]Dap(DbConnection, true))
            {
                [#ForeignKeyLocalColumnKeyType#]
            }
        }]]>
                </Condition>
                <Condition Key="MultiplicityMany">
                    <![CDATA[
        /// <summary>
        /// [:ForeignTableNameDb:] - [:ForeignFieldNameDb:]
        /// </summary>
        public List<[:ForeignTableName:]> [:ForeignTableNameAsField:]()
        {
            using (var dap = new [:ForeignTableName:]Dap(DbConnection, true))
            {
                [#ForeignKeyLocalColumnKeyType#]
            }
        }]]>
                </Condition>
                <Condition Key="MultiplicityOneToOnePrimary">
                    <![CDATA[
        /// <summary>
        /// [:ForeignTableNameDb:] - [:LocalFieldNameDb:]
        /// </summary>
        public [:ForeignTableName:] [:ForeignTableNameAsField:]()
        {
            using (var dap = new [:ForeignTableName:]Dap(DbConnection, true))
            {
                [#ForeignKeyLocalColumnKeyType#]
            }
        }]]>
                </Condition>
                <Condition Key="MultiplicityOneToOneForeign">
                    <![CDATA[
        /// <summary>
        /// [:ForeignTableNameDb:] - [:ForeignFieldNameDb:]
        /// </summary>
        public [:ForeignTableName:] [:ForeignTableNameAsField:]()
        {
            using (var dap = new [:ForeignTableName:]Dap(DbConnection, true))
            {
                [#ForeignKeyLocalColumnKeyType#]
            }
        }]]>
                </Condition>
                <ConditionContents>
                    <PatternContent Name="ForeignKeyLocalColumnKeyType" ConditionKeyMode="FieldForeignKeyLocalColumn">
                        <Condition Key="OneToOnePrimaryKey">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="OneToOneForeignKey">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="AutoIncrementPrimaryKey">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="AutoIncrement">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="AutoIncNativeNullable">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="AutoIncNullableType">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="PrimaryKey">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="NormalField">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="NativeNullable">
                            <![CDATA[return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:]);]]>
                        </Condition>
                        <Condition Key="NullableType">
                            <![CDATA[if ([:LocalFieldName:] != null)
                    return dap.GetBy[:ForeignFieldName:]([:LocalFieldName:].Value);
                return null;]]>
                        </Condition>
                    </PatternContent>
                </ConditionContents>
            </PatternContent>
        </ConditionContents>
    </PatternContent>
</PatternFile>
